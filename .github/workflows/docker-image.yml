name: CI/CD Dockerized Flask App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    # Step 3: Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4: Run tests
    # Step 4: Run tests
    - name: Run tests
      shell: /usr/bin/bash -e {0}
      env:
        pythonLocation: /opt/hostedtoolcache/Python/3.9.20/x64
        PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.9.20/x64/lib/pkgconfig
        Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.9.20/x64
        Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.9.20/x64
        Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.9.20/x64
        LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.9.20/x64/lib

        GCS_BUCKET_NAME: inriskbackend
        GOOGLE_APPLICATION_CREDENTIALS: imshu-439710-c17ba7008b62.json
      run: pytest  # Run the tests

    # Step 5: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 6: Build and push Docker image
    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-app:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:latest

  

